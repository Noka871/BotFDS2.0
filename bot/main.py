import os
import logging
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters
from telegram.constants import ParseMode

# ==================== –ù–ê–°–¢–†–û–ô–ö–ê ====================
# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_path = r'D:\BotFDS2.0\.env'
load_dotenv(env_path)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


# ==================== –≠–ú–û–¶–ò –ò –°–¢–ò–õ–¨ ====================
class Styles:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∏ —ç–º–æ–¥–∑–∏"""
    # –≠–º–æ–¥–∑–∏
    SEARCH = "üîç"
    HELP = "‚ùì"
    SETTINGS = "‚öôÔ∏è"
    STATS = "üìä"
    BACK = "‚¨ÖÔ∏è"
    RELOAD = "üîÑ"
    HOME = "üè†"
    DATABASE = "üíæ"
    INTERNET = "üåê"
    CROWN = "üëë"
    WIZARD = "üßô"

    # –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏ (–¥–ª—è HTML —Ä–∞–∑–º–µ—Ç–∫–∏)
    class Colors:
        PRIMARY = "#2E86AB"
        SUCCESS = "#27AE60"
        WARNING = "#F39C12"
        DANGER = "#E74C3C"
        INFO = "#3498DB"

    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏
    @staticmethod
    def bold(text):
        return f"<b>{text}</b>"

    @staticmethod
    def italic(text):
        return f"<i>{text}</i>"

    @staticmethod
    def code(text):
        return f"<code>{text}</code>"

    @staticmethod
    def link(url, text):
        return f'<a href="{url}">{text}</a>'


# ==================== –ö–õ–ê–í–ò–ê–¢–£–†–´ ====================
class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""

    @staticmethod
    def main_menu(user_id, is_admin=False):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏"""
        keyboard = [
            # –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            [
                InlineKeyboardButton(
                    f"{Styles.SEARCH} –ü–æ–∏—Å–∫",
                    callback_data="search_start"
                )
            ],
            # –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            [
                InlineKeyboardButton(
                    f"{Styles.HELP} –ü–æ–º–æ—â—å",
                    callback_data="help_info"
                ),
                InlineKeyboardButton(
                    f"{Styles.SETTINGS} –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    callback_data="settings"
                )
            ],
            # –¢—Ä–µ—Ç–∏–π —Ä—è–¥ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            [
                InlineKeyboardButton(
                    f"{Styles.STATS} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    callback_data="stats"
                )
            ]
        ]

        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        if is_admin:
            keyboard.append([
                InlineKeyboardButton(
                    f"{Styles.CROWN} –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                    callback_data="admin_panel"
                )
            ])

        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def search_menu():
        """–ú–µ–Ω—é –ø–æ–∏—Å–∫–∞"""
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton(
                    f"{Styles.DATABASE} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
                    callback_data="search_db"
                ),
                InlineKeyboardButton(
                    f"{Styles.INTERNET} –ò–Ω—Ç–µ—Ä–Ω–µ—Ç",
                    callback_data="search_web"
                )
            ],
            [
                InlineKeyboardButton(
                    f"{Styles.BACK} –ù–∞–∑–∞–¥",
                    callback_data="back_main"
                )
            ]
        ])

    @staticmethod
    def back_button():
        """–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton(f"{Styles.BACK} –ù–∞–∑–∞–¥", callback_data="back_main")]
        ])

    @staticmethod
    def stats_menu():
        """–ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton(
                    f"{Styles.RELOAD} –û–±–Ω–æ–≤–∏—Ç—å",
                    callback_data="stats_refresh"
                ),
                InlineKeyboardButton(
                    f"{Styles.BACK} –ù–∞–∑–∞–¥",
                    callback_data="back_main"
                )
            ]
        ])


# ==================== –¢–ï–ö–°–¢–û–í–´–ï –°–û–û–ë–©–ï–ù–ò–Ø ====================
class Messages:
    """–ö–ª–∞—Å—Å –¥–ª—è –∫—Ä–∞—Å–∏–≤—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""

    @staticmethod
    def welcome(first_name):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return f"""
üéâ {Styles.bold(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!')}

{Styles.italic('–Ø —É–º–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')}

‚ú® {Styles.bold('–ß—Ç–æ —è —É–º–µ—é:')}
‚Ä¢ {Styles.SEARCH} –ò—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
‚Ä¢ {Styles.STATS} –°–æ–±–∏—Ä–∞—Ç—å –∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚Ä¢ {Styles.SETTINGS} –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è –ø–æ–¥ –≤–∞—à–∏ preferences

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
        """

    @staticmethod
    def help():
        """–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏"""
        return f"""
{Styles.HELP} {Styles.bold('–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É')}

{Styles.bold('–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')}
/{Styles.code('start')} - –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/{Styles.code('help')} - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

{Styles.bold('–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é:')}
‚Ä¢ {Styles.SEARCH} {Styles.bold('–ü–æ–∏—Å–∫')} - –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
‚Ä¢ {Styles.SETTINGS} {Styles.bold('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')} - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
‚Ä¢ {Styles.STATS} {Styles.bold('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')} - –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

{Styles.italic('–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é')}
        """

    @staticmethod
    def search():
        """–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞"""
        return f"""
{Styles.SEARCH} {Styles.bold('–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞')}

–í—ã–±–µ—Ä–∏—Ç–µ –≥–¥–µ –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:

‚Ä¢ {Styles.DATABASE} {Styles.bold('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö')} - –ø–æ–∏—Å–∫ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
‚Ä¢ {Styles.INTERNET} {Styles.bold('–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')} - –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ

{Styles.italic('–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞:')}
        """

    @staticmethod
    def settings():
        """–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        return f"""
{Styles.SETTINGS} {Styles.bold('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')}

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –ø–æ–¥ —Å–µ–±—è:

{Styles.bold('–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')}
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
‚Ä¢ –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã

{Styles.italic('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö')}
        """

    @staticmethod
    def stats():
        """–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        return f"""
{Styles.STATS} {Styles.bold('–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')}

{Styles.bold('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:')}
‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {Styles.code('15')}
‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {Styles.code('127')}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: {Styles.code('3')}

{Styles.bold('–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:')}
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {Styles.code('1.2—Å')}
‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞: {Styles.code('89%')}

{Styles.italic('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏')}
        """


# ==================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ====================

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º"""
    try:
        user = update.effective_user
        is_admin = user.id in [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ ID –∞–¥–º–∏–Ω–æ–≤

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text(
            Messages.welcome(user.first_name),
            reply_markup=Keyboards.main_menu(user.id, is_admin),
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=True
        )

        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start: {e}")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        Messages.help(),
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True
    )


async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    try:
        query = update.callback_query
        await query.answer()

        user = query.from_user
        callback_data = query.data

        logger.info(f"üîò –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {callback_data} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.first_name}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–Ω–æ–ø–æ–∫
        if callback_data == "search_start":
            await handle_search(query)

        elif callback_data == "help_info":
            await handle_help(query)

        elif callback_data == "settings":
            await handle_settings(query)

        elif callback_data == "stats":
            await handle_stats(query)

        elif callback_data == "search_db":
            await handle_search_db(query)

        elif callback_data == "search_web":
            await handle_search_web(query)

        elif callback_data == "stats_refresh":
            await handle_stats_refresh(query)

        elif callback_data == "back_main":
            await handle_back_main(query)

        elif callback_data == "admin_panel":
            await handle_admin_panel(query)

        else:
            await query.edit_message_text(
                "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
                parse_mode=ParseMode.HTML
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–æ–∫: {e}")


# ==================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö ====================

async def handle_search(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞"""
    await query.edit_message_text(
        Messages.search(),
        reply_markup=Keyboards.search_menu(),
        parse_mode=ParseMode.HTML
    )


async def handle_help(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    await query.edit_message_text(
        Messages.help(),
        reply_markup=Keyboards.back_button(),
        parse_mode=ParseMode.HTML
    )


async def handle_settings(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    await query.edit_message_text(
        Messages.settings(),
        reply_markup=Keyboards.back_button(),
        parse_mode=ParseMode.HTML
    )


async def handle_stats(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await query.edit_message_text(
        Messages.stats(),
        reply_markup=Keyboards.stats_menu(),
        parse_mode=ParseMode.HTML
    )


async def handle_search_db(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    await query.edit_message_text(
        f"""
{Styles.DATABASE} {Styles.bold('–ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')}

{Styles.italic('–ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')}

{Styles.bold('–°—Ç–∞—Ç—É—Å:')} {Styles.code('–ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è')}
{Styles.bold('–û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:')} ‚è≥
        """,
        reply_markup=Keyboards.back_button(),
        parse_mode=ParseMode.HTML
    )


async def handle_search_web(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"""
    await query.edit_message_text(
        f"""
{Styles.INTERNET} {Styles.bold('–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ')}

{Styles.italic('–ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö...')}

{Styles.bold('–°—Ç–∞—Ç—É—Å:')} {Styles.code('–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏')}
{Styles.bold('–ò—Å—Ç–æ—á–Ω–∏–∫–∏:')} {Styles.code('Google, Yandex, Bing')}
        """,
        reply_markup=Keyboards.back_button(),
        parse_mode=ParseMode.HTML
    )


async def handle_stats_refresh(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await query.edit_message_text(
        f"""
{Styles.STATS} {Styles.bold('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')} {Styles.RELOAD}

{Styles.bold('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:')}
‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {Styles.code('18')} ‚ÜóÔ∏è
‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {Styles.code('145')} ‚ÜóÔ∏è
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: {Styles.code('4')} ‚ÜóÔ∏è

{Styles.italic('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')}
        """,
        reply_markup=Keyboards.stats_menu(),
        parse_mode=ParseMode.HTML
    )


async def handle_back_main(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥"""
    user = query.from_user
    is_admin = user.id in [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ ID –∞–¥–º–∏–Ω–æ–≤

    await query.edit_message_text(
        Messages.welcome(user.first_name),
        reply_markup=Keyboards.main_menu(user.id, is_admin),
        parse_mode=ParseMode.HTML
    )


async def handle_admin_panel(query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    await query.edit_message_text(
        f"""
{Styles.CROWN} {Styles.bold('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')}

{Styles.bold('–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:')}
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ –õ–æ–≥–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

{Styles.italic('–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')}
        """,
        reply_markup=Keyboards.back_button(),
        parse_mode=ParseMode.HTML
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text

    if not text.startswith('/'):
        await update.message.reply_text(
            f"""
{Styles.WIZARD} {Styles.bold('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!')}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {Styles.code('–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é')} –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ {Styles.code('/start')} - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
‚Ä¢ {Styles.code('/help')} - —Å–ø—Ä–∞–≤–∫–∞

{Styles.italic('–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏')}
            """,
            parse_mode=ParseMode.HTML
        )


# ==================== –ó–ê–ü–£–°–ö –ë–û–¢–ê ====================

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(BOT_TOKEN).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CallbackQueryHandler(handle_callback_query))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        # –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        print("‚ú®" * 50)
        print("üéÆ BOT FDS 2.0 - –ó–ê–ü–£–°–ö")
        print("‚ú®" * 50)
        print("üìä –†–µ–∂–∏–º: –ü–†–û–î–£–ö–®–ï–ù")
        print("üé® –°—Ç–∏–ª—å: –ü–†–ï–ú–ò–£–ú")
        print("üöÄ –°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù")
        print("‚ú®" * 50)

        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–µ–º–∏—É–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º!")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(
            drop_pending_updates=True,
            allowed_updates=['message', 'callback_query']
        )

    except Exception as e:
        logger.critical(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == '__main__':
    main()