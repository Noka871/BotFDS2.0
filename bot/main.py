import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from config import BOT_TOKEN

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è aiogram 2.x
from handlers.common import register_common_handlers
from handlers.dubber import register_dubber_handlers
from handlers.timer import register_timer_handlers
from handlers.admin import register_admin_handlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –¥–ª—è aiogram 2.x"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è aiogram 2.x
        bot = Bot(token=BOT_TOKEN)
        storage = MemoryStorage()
        dp = Dispatcher(bot, storage=storage)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        register_common_handlers(dp)
        register_dubber_handlers(dp)
        register_timer_handlers(dp)
        register_admin_handlers(dp)

        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (aiogram 2.x)")
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        await dp.start_polling()

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    asyncio.run(main())