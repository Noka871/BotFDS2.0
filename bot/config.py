"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª—è–∂–æ–º.

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ
–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.

–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∏–º–µ—Ä—É –≤ .env.example
"""

import os
from typing import List
from dotenv import load_dotenv  # –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env —Ñ–∞–π–ª–∞

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
# –ï—Å–ª–∏ —Ñ–∞–π–ª .env –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê
# =============================================================================

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather –≤ Telegram
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è! –ë–µ–∑ –Ω–µ–µ –±–æ—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.
# –ü—Ä–∏–º–µ—Ä: BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghi
BOT_TOKEN: str = os.getenv("BOT_TOKEN", "")

# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞
# –ü—Ä–∏–º–µ—Ä: ADMIN_IDS=123456789,987654321,555555555
ADMIN_IDS: List[int] = (
    list(map(int, os.getenv("ADMIN_IDS", "").split(',')))
    if os.getenv("ADMIN_IDS")
    else []
)

# URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQLite —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –¥—Ä–∞–π–≤–µ—Ä–æ–º
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –°–£–ë–î:
# - SQLite: sqlite+aiosqlite:///./bot.db
# - PostgreSQL: postgresql+asyncpg://user:password@localhost/dbname
# - MySQL: mysql+aiomysql://user:password@localhost/dbname
DATABASE_URL: str = os.getenv("DATABASE_URL", "sqlite+aiosqlite:///./bot.db")

# –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# DEBUG - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# INFO - –æ–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è production
LOG_LEVEL: str = os.getenv("LOG_LEVEL", "INFO").upper()

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
# =============================================================================

# –≠—Ö–æ-–∑–∞–ø—Ä–æ—Å—ã (–≤—ã–≤–æ–¥ SQL –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å)
# True - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ SQL –∑–∞–ø—Ä–æ—Å—ã (—É–¥–æ–±–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
# False - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è production)
DB_ECHO: bool = os.getenv("DB_ECHO", "False").lower() == "true"

# –†–∞–∑–º–µ—Ä –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
DB_POOL_MIN_SIZE: int = int(os.getenv("DB_POOL_MIN_SIZE", "5"))

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
DB_POOL_MAX_SIZE: int = int(os.getenv("DB_POOL_MAX_SIZE", "20"))

# –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –ø—É–ª–µ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
DB_POOL_RECYCLE: int = int(os.getenv("DB_POOL_RECYCLE", "3600"))

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
# =============================================================================

# –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú)
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 10:00 —É—Ç—Ä–∞
REMINDER_TIME: str = os.getenv("REMINDER_TIME", "10:00")

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –¥–µ–¥–ª–∞–π–Ω–∞ —Å–¥–∞—á–∏ —Å–µ—Ä–∏–π –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–æ–∫
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 2 –¥–Ω—è (–∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –¢–ó)
DEADLINE_DAYS: int = int(os.getenv("DEADLINE_DAYS", "2"))


# =============================================================================
# –ü–†–û–í–ï–†–ö–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# =============================================================================

def validate_config() -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    –í—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
    """
    if not BOT_TOKEN:
        raise ValueError(
            "‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: BOT_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω!\n"
            "–î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ —Ñ–∞–π–ª .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.\n"
            "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ —É @BotFather –≤ Telegram."
        )

    if not BOT_TOKEN.startswith('') or ':' not in BOT_TOKEN:
        raise ValueError(
            "‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç BOT_TOKEN!\n"
            "–¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        )

    if not DATABASE_URL:
        raise ValueError(
            "‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: DATABASE_URL –Ω–µ —É–∫–∞–∑–∞–Ω!"
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    valid_log_levels = {"DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"}
    if LOG_LEVEL not in valid_log_levels:
        raise ValueError(
            f"‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: –ù–µ–≤–µ—Ä–Ω—ã–π LOG_LEVEL '{LOG_LEVEL}'!\n"
            f"–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {', '.join(valid_log_levels)}"
        )


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
try:
    validate_config()
except ValueError as e:
    print(f"\n{'=' * 60}")
    print("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print('=' * 60)
    print(e)
    print(f"{'=' * 60}\n")
    raise


# =============================================================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =============================================================================

def get_config_summary() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∫—Ä–∞—Ç–∫–æ–π —Å–≤–æ–¥–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    Useful for debugging and logging.
    """
    return (
        f"ü§ñ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞:\n"
        f"‚Ä¢ BOT_TOKEN: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if BOT_TOKEN else '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n"
        f"‚Ä¢ ADMIN_IDS: {len(ADMIN_IDS)} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n"
        f"‚Ä¢ DATABASE_URL: {DATABASE_URL.split('://')[0]}://...\n"
        f"‚Ä¢ LOG_LEVEL: {LOG_LEVEL}\n"
        f"‚Ä¢ REMINDER_TIME: {REMINDER_TIME}\n"
        f"‚Ä¢ DEADLINE_DAYS: {DEADLINE_DAYS} –¥–Ω–µ–π"
    )


# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
if __name__ == "__main__":
    print(f"\n{'=' * 60}")
    print("–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –î–£–ë–õ–Ø–ñ–û–ú")
    print('=' * 60)
    print(get_config_summary())
    print(f"{'=' * 60}\n")